// <auto-generated />
using System;
using Data.EFContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20181206182837_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.JunctionEntities.AccessControl.RolePermission", b =>
                {
                    b.Property<Guid>("IdRole");

                    b.Property<Guid>("IdPermission");

                    b.HasKey("IdRole", "IdPermission");

                    b.HasIndex("IdPermission");

                    b.ToTable("RolePermission","AccessControl");

                    b.HasData(
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("048e322a-dc47-4094-b4d0-acb594e0abb6") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("51e3b2ef-7ab1-4abf-9c48-868d7a6be851") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("717aa7a4-b58d-440a-a8f9-b20ba17bbf5d") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("fb7a64d7-99db-4966-b16e-f2a1f1f9d8aa") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("3e409dc4-2b30-49c2-ac0d-49ff0a7eca75") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("57b5f483-65ca-4e40-b4ee-f40b70eea058") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("96336698-2a7e-48bc-ba37-259f0c213872") },
                        new { IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), IdPermission = new Guid("6a817d7d-c494-4f5c-afaa-0799f7d1621c") }
                    );
                });

            modelBuilder.Entity("Domain.Entities.JunctionEntities.AccessControl.UserRole", b =>
                {
                    b.Property<Guid>("IdUser");

                    b.Property<Guid>("IdRole");

                    b.HasKey("IdUser", "IdRole");

                    b.HasIndex("IdRole");

                    b.ToTable("UserRole","AccessControl");

                    b.HasData(
                        new { IdUser = new Guid("6364eb7f-dd2b-4ae0-b874-7b336aabee2f"), IdRole = new Guid("56462d64-83e7-4834-a30b-a87eca134c94") }
                    );
                });

            modelBuilder.Entity("Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("Permission","AccessControl");

                    b.HasData(
                        new { Id = new Guid("048e322a-dc47-4094-b4d0-acb594e0abb6"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 134, DateTimeKind.Local), Description = "Create new User", Name = "AddUser", Status = true },
                        new { Id = new Guid("51e3b2ef-7ab1-4abf-9c48-868d7a6be851"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "Edit User", Name = "EditUser", Status = true },
                        new { Id = new Guid("717aa7a4-b58d-440a-a8f9-b20ba17bbf5d"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "Remove User", Name = "RemoveUser", Status = true },
                        new { Id = new Guid("fb7a64d7-99db-4966-b16e-f2a1f1f9d8aa"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "List User", Name = "ListUser", Status = true },
                        new { Id = new Guid("3e409dc4-2b30-49c2-ac0d-49ff0a7eca75"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "Create new Role", Name = "AddRole", Status = true },
                        new { Id = new Guid("57b5f483-65ca-4e40-b4ee-f40b70eea058"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "Edit Role", Name = "EditRole", Status = true },
                        new { Id = new Guid("96336698-2a7e-48bc-ba37-259f0c213872"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "Remove Role", Name = "RemoveRole", Status = true },
                        new { Id = new Guid("6a817d7d-c494-4f5c-afaa-0799f7d1621c"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 135, DateTimeKind.Local), Description = "List Role", Name = "ListRole", Status = true }
                    );
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("Role","AccessControl");

                    b.HasData(
                        new { Id = new Guid("56462d64-83e7-4834-a30b-a87eca134c94"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 133, DateTimeKind.Local), Description = "Role of system administrator", Name = "AdministratorRole", Status = true }
                    );
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("User","AccessControl");

                    b.HasData(
                        new { Id = new Guid("6364eb7f-dd2b-4ae0-b874-7b336aabee2f"), CreationDate = new DateTime(2018, 12, 6, 16, 28, 37, 115, DateTimeKind.Local), Email = "admin@admin.com", Name = "AdministratorUser", Password = "Change123", Status = true }
                    );
                });

            modelBuilder.Entity("Domain.Entities.JunctionEntities.AccessControl.RolePermission", b =>
                {
                    b.HasOne("Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdPermission")
                        .HasConstraintName("FK_RolePermission_Permission")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("FK_RolePermission_Role")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Entities.JunctionEntities.AccessControl.UserRole", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("FK_UserRole_Role")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_UserRole_User")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
